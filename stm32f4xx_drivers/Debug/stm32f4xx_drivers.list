
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000774  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000908  08000910  00010910  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000908  08000908  00010910  2**0
                  CONTENTS
  4 .ARM          00000000  08000908  08000908  00010910  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000908  08000910  00010910  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000908  08000908  00010908  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800090c  0800090c  0001090c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010910  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000000  08000910  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000034  08000910  00020034  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010910  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010940  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000993  00000000  00000000  00010983  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000290  00000000  00000000  00011316  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000115a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00011670  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000145e  00000000  00000000  000116fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d0c  00000000  00000000  00012b5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000056f4  00000000  00000000  00013866  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000264  00000000  00000000  00018f5c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000067  00000000  00000000  000191c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080008f0 	.word	0x080008f0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080008f0 	.word	0x080008f0

080001d4 <main>:
	}
}
GPIO_Handle_t gpio_led;
GPIO_Handle_t gpio_button;

int main(){
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0

	/*Init led pin*/
	gpio_led.pGPIOx = GPIOA;
 80001d8:	4b1a      	ldr	r3, [pc, #104]	; (8000244 <main+0x70>)
 80001da:	4a1b      	ldr	r2, [pc, #108]	; (8000248 <main+0x74>)
 80001dc:	601a      	str	r2, [r3, #0]
	gpio_led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80001de:	4b19      	ldr	r3, [pc, #100]	; (8000244 <main+0x70>)
 80001e0:	2201      	movs	r2, #1
 80001e2:	715a      	strb	r2, [r3, #5]
	gpio_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_5;
 80001e4:	4b17      	ldr	r3, [pc, #92]	; (8000244 <main+0x70>)
 80001e6:	2205      	movs	r2, #5
 80001e8:	711a      	strb	r2, [r3, #4]
	gpio_led.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPTYPE_PP;
 80001ea:	4b16      	ldr	r3, [pc, #88]	; (8000244 <main+0x70>)
 80001ec:	2200      	movs	r2, #0
 80001ee:	721a      	strb	r2, [r3, #8]
	gpio_led.GPIO_PinConfig.GPIO_PUPDControl = GPIO_NO_PUPD;
 80001f0:	4b14      	ldr	r3, [pc, #80]	; (8000244 <main+0x70>)
 80001f2:	2200      	movs	r2, #0
 80001f4:	71da      	strb	r2, [r3, #7]
	GPIO_PClkControl(gpio_led.pGPIOx, ENABLE);
 80001f6:	4b13      	ldr	r3, [pc, #76]	; (8000244 <main+0x70>)
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	2101      	movs	r1, #1
 80001fc:	4618      	mov	r0, r3
 80001fe:	f000 f9f7 	bl	80005f0 <GPIO_PClkControl>
	GPIO_Init(&gpio_led);
 8000202:	4810      	ldr	r0, [pc, #64]	; (8000244 <main+0x70>)
 8000204:	f000 f85e 	bl	80002c4 <GPIO_Init>

	/*Init button pin*/
	gpio_button.pGPIOx = GPIOC;
 8000208:	4b10      	ldr	r3, [pc, #64]	; (800024c <main+0x78>)
 800020a:	4a11      	ldr	r2, [pc, #68]	; (8000250 <main+0x7c>)
 800020c:	601a      	str	r2, [r3, #0]
	gpio_button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_13;
 800020e:	4b0f      	ldr	r3, [pc, #60]	; (800024c <main+0x78>)
 8000210:	220d      	movs	r2, #13
 8000212:	711a      	strb	r2, [r3, #4]
	gpio_button.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000214:	4b0d      	ldr	r3, [pc, #52]	; (800024c <main+0x78>)
 8000216:	2204      	movs	r2, #4
 8000218:	715a      	strb	r2, [r3, #5]
	gpio_button.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPTYPE_PP;
 800021a:	4b0c      	ldr	r3, [pc, #48]	; (800024c <main+0x78>)
 800021c:	2200      	movs	r2, #0
 800021e:	721a      	strb	r2, [r3, #8]
	gpio_button.GPIO_PinConfig.GPIO_PUPDControl = GPIO_PU;
 8000220:	4b0a      	ldr	r3, [pc, #40]	; (800024c <main+0x78>)
 8000222:	2201      	movs	r2, #1
 8000224:	71da      	strb	r2, [r3, #7]
	GPIO_Init(&gpio_button);
 8000226:	4809      	ldr	r0, [pc, #36]	; (800024c <main+0x78>)
 8000228:	f000 f84c 	bl	80002c4 <GPIO_Init>

	GPIO_PClkControl(gpio_button.pGPIOx, ENABLE);
 800022c:	4b07      	ldr	r3, [pc, #28]	; (800024c <main+0x78>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	2101      	movs	r1, #1
 8000232:	4618      	mov	r0, r3
 8000234:	f000 f9dc 	bl	80005f0 <GPIO_PClkControl>
	GPIO_IRQConfig(IRQ_NO_EXTI15_10, ENABLE);
 8000238:	2101      	movs	r1, #1
 800023a:	2028      	movs	r0, #40	; 0x28
 800023c:	f000 fa8e 	bl	800075c <GPIO_IRQConfig>
//	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, 1);
	while(1){
 8000240:	e7fe      	b.n	8000240 <main+0x6c>
 8000242:	bf00      	nop
 8000244:	2000001c 	.word	0x2000001c
 8000248:	40020000 	.word	0x40020000
 800024c:	20000028 	.word	0x20000028
 8000250:	40020800 	.word	0x40020800

08000254 <EXTI15_10_IRQHandler>:

	return 0;

}

void EXTI15_10_IRQHandler(void){
 8000254:	b580      	push	{r7, lr}
 8000256:	af00      	add	r7, sp, #0

	GPIO_IRQHandling(GPIO_PIN_13);
 8000258:	200d      	movs	r0, #13
 800025a:	f000 fb05 	bl	8000868 <GPIO_IRQHandling>

	GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 800025e:	2105      	movs	r1, #5
 8000260:	4802      	ldr	r0, [pc, #8]	; (800026c <EXTI15_10_IRQHandler+0x18>)
 8000262:	f000 fa65 	bl	8000730 <GPIO_TogglePin>

}
 8000266:	bf00      	nop
 8000268:	bd80      	pop	{r7, pc}
 800026a:	bf00      	nop
 800026c:	40020000 	.word	0x40020000

08000270 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000270:	480d      	ldr	r0, [pc, #52]	; (80002a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000272:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000274:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000278:	480c      	ldr	r0, [pc, #48]	; (80002ac <LoopForever+0x6>)
  ldr r1, =_edata
 800027a:	490d      	ldr	r1, [pc, #52]	; (80002b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800027c:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <LoopForever+0xe>)
  movs r3, #0
 800027e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000280:	e002      	b.n	8000288 <LoopCopyDataInit>

08000282 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000282:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000284:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000286:	3304      	adds	r3, #4

08000288 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000288:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800028c:	d3f9      	bcc.n	8000282 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028e:	4a0a      	ldr	r2, [pc, #40]	; (80002b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000290:	4c0a      	ldr	r4, [pc, #40]	; (80002bc <LoopForever+0x16>)
  movs r3, #0
 8000292:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000294:	e001      	b.n	800029a <LoopFillZerobss>

08000296 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000296:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000298:	3204      	adds	r2, #4

0800029a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800029c:	d3fb      	bcc.n	8000296 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029e:	f000 fb03 	bl	80008a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002a2:	f7ff ff97 	bl	80001d4 <main>

080002a6 <LoopForever>:

LoopForever:
  b LoopForever
 80002a6:	e7fe      	b.n	80002a6 <LoopForever>
  ldr   r0, =_estack
 80002a8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b4:	08000910 	.word	0x08000910
  ldr r2, =_sbss
 80002b8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002bc:	20000034 	.word	0x20000034

080002c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c0:	e7fe      	b.n	80002c0 <ADC_IRQHandler>
	...

080002c4 <GPIO_Init>:
/**
 * @brief Initialize GPIO port
 *
 * @param pGPIOx base address of gpio peripheral
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 80002c4:	b480      	push	{r7}
 80002c6:	b087      	sub	sp, #28
 80002c8:	af00      	add	r7, sp, #0
 80002ca:	6078      	str	r0, [r7, #4]

	uint8_t pin_number = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	791b      	ldrb	r3, [r3, #4]
 80002d0:	75fb      	strb	r3, [r7, #23]
	uint32_t temp=0;
 80002d2:	2300      	movs	r3, #0
 80002d4:	613b      	str	r3, [r7, #16]
	//1. configure mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	795b      	ldrb	r3, [r3, #5]
 80002da:	2b03      	cmp	r3, #3
 80002dc:	d81d      	bhi.n	800031a <GPIO_Init+0x56>
		// non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pin_number));
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	795b      	ldrb	r3, [r3, #5]
 80002e2:	461a      	mov	r2, r3
 80002e4:	7dfb      	ldrb	r3, [r7, #23]
 80002e6:	005b      	lsls	r3, r3, #1
 80002e8:	fa02 f303 	lsl.w	r3, r2, r3
 80002ec:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<pin_number);
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	681a      	ldr	r2, [r3, #0]
 80002f4:	7dfb      	ldrb	r3, [r7, #23]
 80002f6:	2103      	movs	r1, #3
 80002f8:	fa01 f303 	lsl.w	r3, r1, r3
 80002fc:	43db      	mvns	r3, r3
 80002fe:	4619      	mov	r1, r3
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	400a      	ands	r2, r1
 8000306:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	6819      	ldr	r1, [r3, #0]
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	693a      	ldr	r2, [r7, #16]
 8000314:	430a      	orrs	r2, r1
 8000316:	601a      	str	r2, [r3, #0]
 8000318:	e0ac      	b.n	8000474 <GPIO_Init+0x1b0>
	}else{
		// interrupt mode

		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<pin_number); // clear to configure pin mode type as input
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	681a      	ldr	r2, [r3, #0]
 8000320:	7dfb      	ldrb	r3, [r7, #23]
 8000322:	2103      	movs	r1, #3
 8000324:	fa01 f303 	lsl.w	r3, r1, r3
 8000328:	43db      	mvns	r3, r3
 800032a:	4619      	mov	r1, r3
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	400a      	ands	r2, r1
 8000332:	601a      	str	r2, [r3, #0]

		//1. Configure rising/falling edge

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	795b      	ldrb	r3, [r3, #5]
 8000338:	2b04      	cmp	r3, #4
 800033a:	d115      	bne.n	8000368 <GPIO_Init+0xa4>
			EXTI->FTSR |= (1<<pin_number);
 800033c:	4b8f      	ldr	r3, [pc, #572]	; (800057c <GPIO_Init+0x2b8>)
 800033e:	68db      	ldr	r3, [r3, #12]
 8000340:	7dfa      	ldrb	r2, [r7, #23]
 8000342:	2101      	movs	r1, #1
 8000344:	fa01 f202 	lsl.w	r2, r1, r2
 8000348:	4611      	mov	r1, r2
 800034a:	4a8c      	ldr	r2, [pc, #560]	; (800057c <GPIO_Init+0x2b8>)
 800034c:	430b      	orrs	r3, r1
 800034e:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1<<pin_number); //clear corresponding RTSR bit
 8000350:	4b8a      	ldr	r3, [pc, #552]	; (800057c <GPIO_Init+0x2b8>)
 8000352:	689b      	ldr	r3, [r3, #8]
 8000354:	7dfa      	ldrb	r2, [r7, #23]
 8000356:	2101      	movs	r1, #1
 8000358:	fa01 f202 	lsl.w	r2, r1, r2
 800035c:	43d2      	mvns	r2, r2
 800035e:	4611      	mov	r1, r2
 8000360:	4a86      	ldr	r2, [pc, #536]	; (800057c <GPIO_Init+0x2b8>)
 8000362:	400b      	ands	r3, r1
 8000364:	6093      	str	r3, [r2, #8]
 8000366:	e031      	b.n	80003cc <GPIO_Init+0x108>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	795b      	ldrb	r3, [r3, #5]
 800036c:	2b05      	cmp	r3, #5
 800036e:	d115      	bne.n	800039c <GPIO_Init+0xd8>
			EXTI->RTSR |= (1<<pin_number);
 8000370:	4b82      	ldr	r3, [pc, #520]	; (800057c <GPIO_Init+0x2b8>)
 8000372:	689b      	ldr	r3, [r3, #8]
 8000374:	7dfa      	ldrb	r2, [r7, #23]
 8000376:	2101      	movs	r1, #1
 8000378:	fa01 f202 	lsl.w	r2, r1, r2
 800037c:	4611      	mov	r1, r2
 800037e:	4a7f      	ldr	r2, [pc, #508]	; (800057c <GPIO_Init+0x2b8>)
 8000380:	430b      	orrs	r3, r1
 8000382:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1<<pin_number); //clear corresponding FTSR bit
 8000384:	4b7d      	ldr	r3, [pc, #500]	; (800057c <GPIO_Init+0x2b8>)
 8000386:	68db      	ldr	r3, [r3, #12]
 8000388:	7dfa      	ldrb	r2, [r7, #23]
 800038a:	2101      	movs	r1, #1
 800038c:	fa01 f202 	lsl.w	r2, r1, r2
 8000390:	43d2      	mvns	r2, r2
 8000392:	4611      	mov	r1, r2
 8000394:	4a79      	ldr	r2, [pc, #484]	; (800057c <GPIO_Init+0x2b8>)
 8000396:	400b      	ands	r3, r1
 8000398:	60d3      	str	r3, [r2, #12]
 800039a:	e017      	b.n	80003cc <GPIO_Init+0x108>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FRT){
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	795b      	ldrb	r3, [r3, #5]
 80003a0:	2b06      	cmp	r3, #6
 80003a2:	d113      	bne.n	80003cc <GPIO_Init+0x108>
			EXTI->RTSR |= (1<<pin_number);
 80003a4:	4b75      	ldr	r3, [pc, #468]	; (800057c <GPIO_Init+0x2b8>)
 80003a6:	689b      	ldr	r3, [r3, #8]
 80003a8:	7dfa      	ldrb	r2, [r7, #23]
 80003aa:	2101      	movs	r1, #1
 80003ac:	fa01 f202 	lsl.w	r2, r1, r2
 80003b0:	4611      	mov	r1, r2
 80003b2:	4a72      	ldr	r2, [pc, #456]	; (800057c <GPIO_Init+0x2b8>)
 80003b4:	430b      	orrs	r3, r1
 80003b6:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1<<pin_number);
 80003b8:	4b70      	ldr	r3, [pc, #448]	; (800057c <GPIO_Init+0x2b8>)
 80003ba:	68db      	ldr	r3, [r3, #12]
 80003bc:	7dfa      	ldrb	r2, [r7, #23]
 80003be:	2101      	movs	r1, #1
 80003c0:	fa01 f202 	lsl.w	r2, r1, r2
 80003c4:	4611      	mov	r1, r2
 80003c6:	4a6d      	ldr	r2, [pc, #436]	; (800057c <GPIO_Init+0x2b8>)
 80003c8:	430b      	orrs	r3, r1
 80003ca:	60d3      	str	r3, [r2, #12]
		}

		// 2. Configure gpio port selection in SYSCFG_EXTICR
		uint8_t temp1 = pin_number/4;
 80003cc:	7dfb      	ldrb	r3, [r7, #23]
 80003ce:	089b      	lsrs	r3, r3, #2
 80003d0:	73fb      	strb	r3, [r7, #15]
		uint8_t temp2 = pin_number%4;
 80003d2:	7dfb      	ldrb	r3, [r7, #23]
 80003d4:	f003 0303 	and.w	r3, r3, #3
 80003d8:	73bb      	strb	r3, [r7, #14]

		uint16_t port_code = GPIO_ADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	4a68      	ldr	r2, [pc, #416]	; (8000580 <GPIO_Init+0x2bc>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d024      	beq.n	800042e <GPIO_Init+0x16a>
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	4a66      	ldr	r2, [pc, #408]	; (8000584 <GPIO_Init+0x2c0>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d01d      	beq.n	800042a <GPIO_Init+0x166>
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	4a65      	ldr	r2, [pc, #404]	; (8000588 <GPIO_Init+0x2c4>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d016      	beq.n	8000426 <GPIO_Init+0x162>
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	4a63      	ldr	r2, [pc, #396]	; (800058c <GPIO_Init+0x2c8>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d00f      	beq.n	8000422 <GPIO_Init+0x15e>
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	4a62      	ldr	r2, [pc, #392]	; (8000590 <GPIO_Init+0x2cc>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d008      	beq.n	800041e <GPIO_Init+0x15a>
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	4a60      	ldr	r2, [pc, #384]	; (8000594 <GPIO_Init+0x2d0>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d101      	bne.n	800041a <GPIO_Init+0x156>
 8000416:	2307      	movs	r3, #7
 8000418:	e00a      	b.n	8000430 <GPIO_Init+0x16c>
 800041a:	2300      	movs	r3, #0
 800041c:	e008      	b.n	8000430 <GPIO_Init+0x16c>
 800041e:	2304      	movs	r3, #4
 8000420:	e006      	b.n	8000430 <GPIO_Init+0x16c>
 8000422:	2303      	movs	r3, #3
 8000424:	e004      	b.n	8000430 <GPIO_Init+0x16c>
 8000426:	2302      	movs	r3, #2
 8000428:	e002      	b.n	8000430 <GPIO_Init+0x16c>
 800042a:	2301      	movs	r3, #1
 800042c:	e000      	b.n	8000430 <GPIO_Init+0x16c>
 800042e:	2300      	movs	r3, #0
 8000430:	81bb      	strh	r3, [r7, #12]
		SYSCFG_PCLK_EN();
 8000432:	4b59      	ldr	r3, [pc, #356]	; (8000598 <GPIO_Init+0x2d4>)
 8000434:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000436:	4a58      	ldr	r2, [pc, #352]	; (8000598 <GPIO_Init+0x2d4>)
 8000438:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800043c:	6453      	str	r3, [r2, #68]	; 0x44

		//SYSCFG->EXTICR[temp1] &= ~(0xF << 4*temp2);
		SYSCFG->EXTICR[temp1] |= (port_code << 4*temp2);
 800043e:	4a57      	ldr	r2, [pc, #348]	; (800059c <GPIO_Init+0x2d8>)
 8000440:	7bfb      	ldrb	r3, [r7, #15]
 8000442:	3302      	adds	r3, #2
 8000444:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000448:	89b9      	ldrh	r1, [r7, #12]
 800044a:	7bbb      	ldrb	r3, [r7, #14]
 800044c:	009b      	lsls	r3, r3, #2
 800044e:	fa01 f303 	lsl.w	r3, r1, r3
 8000452:	4618      	mov	r0, r3
 8000454:	4951      	ldr	r1, [pc, #324]	; (800059c <GPIO_Init+0x2d8>)
 8000456:	7bfb      	ldrb	r3, [r7, #15]
 8000458:	4302      	orrs	r2, r0
 800045a:	3302      	adds	r3, #2
 800045c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//3. Enable the exti innterupt delivery using IMR
		EXTI->IMR |= (1<<pin_number);
 8000460:	4b46      	ldr	r3, [pc, #280]	; (800057c <GPIO_Init+0x2b8>)
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	7dfa      	ldrb	r2, [r7, #23]
 8000466:	2101      	movs	r1, #1
 8000468:	fa01 f202 	lsl.w	r2, r1, r2
 800046c:	4611      	mov	r1, r2
 800046e:	4a43      	ldr	r2, [pc, #268]	; (800057c <GPIO_Init+0x2b8>)
 8000470:	430b      	orrs	r3, r1
 8000472:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 8000474:	2300      	movs	r3, #0
 8000476:	613b      	str	r3, [r7, #16]
	//2. configure speed
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pin_number);
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	799b      	ldrb	r3, [r3, #6]
 800047c:	461a      	mov	r2, r3
 800047e:	7dfb      	ldrb	r3, [r7, #23]
 8000480:	005b      	lsls	r3, r3, #1
 8000482:	fa02 f303 	lsl.w	r3, r2, r3
 8000486:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<pin_number);
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	689a      	ldr	r2, [r3, #8]
 800048e:	7dfb      	ldrb	r3, [r7, #23]
 8000490:	2103      	movs	r1, #3
 8000492:	fa01 f303 	lsl.w	r3, r1, r3
 8000496:	43db      	mvns	r3, r3
 8000498:	4619      	mov	r1, r3
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	400a      	ands	r2, r1
 80004a0:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	6899      	ldr	r1, [r3, #8]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	693a      	ldr	r2, [r7, #16]
 80004ae:	430a      	orrs	r2, r1
 80004b0:	609a      	str	r2, [r3, #8]
	temp = 0;
 80004b2:	2300      	movs	r3, #0
 80004b4:	613b      	str	r3, [r7, #16]
	//3. configure pupd settings
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PUPDControl << (2 * pin_number);
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	79db      	ldrb	r3, [r3, #7]
 80004ba:	461a      	mov	r2, r3
 80004bc:	7dfb      	ldrb	r3, [r7, #23]
 80004be:	005b      	lsls	r3, r3, #1
 80004c0:	fa02 f303 	lsl.w	r3, r2, r3
 80004c4:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3<<pin_number);
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	68da      	ldr	r2, [r3, #12]
 80004cc:	7dfb      	ldrb	r3, [r7, #23]
 80004ce:	2103      	movs	r1, #3
 80004d0:	fa01 f303 	lsl.w	r3, r1, r3
 80004d4:	43db      	mvns	r3, r3
 80004d6:	4619      	mov	r1, r3
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	400a      	ands	r2, r1
 80004de:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	68d9      	ldr	r1, [r3, #12]
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	693a      	ldr	r2, [r7, #16]
 80004ec:	430a      	orrs	r2, r1
 80004ee:	60da      	str	r2, [r3, #12]
	temp = 0;
 80004f0:	2300      	movs	r3, #0
 80004f2:	613b      	str	r3, [r7, #16]
	//4. configure output type
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pin_number);
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	7a1b      	ldrb	r3, [r3, #8]
 80004f8:	461a      	mov	r2, r3
 80004fa:	7dfb      	ldrb	r3, [r7, #23]
 80004fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000500:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OTYPER &= ~(1<<pin_number);
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	685a      	ldr	r2, [r3, #4]
 8000508:	7dfb      	ldrb	r3, [r7, #23]
 800050a:	2101      	movs	r1, #1
 800050c:	fa01 f303 	lsl.w	r3, r1, r3
 8000510:	43db      	mvns	r3, r3
 8000512:	4619      	mov	r1, r3
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	400a      	ands	r2, r1
 800051a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	6859      	ldr	r1, [r3, #4]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	693a      	ldr	r2, [r7, #16]
 8000528:	430a      	orrs	r2, r1
 800052a:	605a      	str	r2, [r3, #4]
	temp = 0;
 800052c:	2300      	movs	r3, #0
 800052e:	613b      	str	r3, [r7, #16]

	//5. configure alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALT){
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	795b      	ldrb	r3, [r3, #5]
 8000534:	2b02      	cmp	r3, #2
 8000536:	d154      	bne.n	80005e2 <GPIO_Init+0x31e>

		if(pin_number < GPIO_PIN_8){
 8000538:	7dfb      	ldrb	r3, [r7, #23]
 800053a:	2b07      	cmp	r3, #7
 800053c:	d830      	bhi.n	80005a0 <GPIO_Init+0x2dc>
			temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*pin_number);
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	7a5b      	ldrb	r3, [r3, #9]
 8000542:	461a      	mov	r2, r3
 8000544:	7dfb      	ldrb	r3, [r7, #23]
 8000546:	009b      	lsls	r3, r3, #2
 8000548:	fa02 f303 	lsl.w	r3, r2, r3
 800054c:	613b      	str	r3, [r7, #16]
			pGPIOHandle->pGPIOx->AFRL &= ~(0xF<<pin_number);
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	6a1a      	ldr	r2, [r3, #32]
 8000554:	7dfb      	ldrb	r3, [r7, #23]
 8000556:	210f      	movs	r1, #15
 8000558:	fa01 f303 	lsl.w	r3, r1, r3
 800055c:	43db      	mvns	r3, r3
 800055e:	4619      	mov	r1, r3
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	400a      	ands	r2, r1
 8000566:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFRL |= temp;
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	6a19      	ldr	r1, [r3, #32]
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	693a      	ldr	r2, [r7, #16]
 8000574:	430a      	orrs	r2, r1
 8000576:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFRH |= temp;
		}

	}

}
 8000578:	e033      	b.n	80005e2 <GPIO_Init+0x31e>
 800057a:	bf00      	nop
 800057c:	40013c00 	.word	0x40013c00
 8000580:	40020000 	.word	0x40020000
 8000584:	40020400 	.word	0x40020400
 8000588:	40020800 	.word	0x40020800
 800058c:	40020c00 	.word	0x40020c00
 8000590:	40021000 	.word	0x40021000
 8000594:	40021c00 	.word	0x40021c00
 8000598:	40023800 	.word	0x40023800
 800059c:	40013800 	.word	0x40013800
			temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*(pin_number%8));
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	7a5b      	ldrb	r3, [r3, #9]
 80005a4:	461a      	mov	r2, r3
 80005a6:	7dfb      	ldrb	r3, [r7, #23]
 80005a8:	f003 0307 	and.w	r3, r3, #7
 80005ac:	009b      	lsls	r3, r3, #2
 80005ae:	fa02 f303 	lsl.w	r3, r2, r3
 80005b2:	613b      	str	r3, [r7, #16]
			pGPIOHandle->pGPIOx->AFRH &= ~(0xF<<pin_number%8);
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80005ba:	7dfb      	ldrb	r3, [r7, #23]
 80005bc:	f003 0307 	and.w	r3, r3, #7
 80005c0:	210f      	movs	r1, #15
 80005c2:	fa01 f303 	lsl.w	r3, r1, r3
 80005c6:	43db      	mvns	r3, r3
 80005c8:	4619      	mov	r1, r3
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	400a      	ands	r2, r1
 80005d0:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOx->AFRH |= temp;
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	693a      	ldr	r2, [r7, #16]
 80005de:	430a      	orrs	r2, r1
 80005e0:	625a      	str	r2, [r3, #36]	; 0x24
}
 80005e2:	bf00      	nop
 80005e4:	371c      	adds	r7, #28
 80005e6:	46bd      	mov	sp, r7
 80005e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ec:	4770      	bx	lr
 80005ee:	bf00      	nop

080005f0 <GPIO_PClkControl>:
 * @brief Enable/Disable peripheral clock
 *
 * @param pGPIOx    base address of gpio peripheral
 * @param enable    ENABLE/DISABLE macros
 */
void GPIO_PClkControl(GPIO_RegDef_t *pGPIOx, uint8_t enable) {
 80005f0:	b480      	push	{r7}
 80005f2:	b083      	sub	sp, #12
 80005f4:	af00      	add	r7, sp, #0
 80005f6:	6078      	str	r0, [r7, #4]
 80005f8:	460b      	mov	r3, r1
 80005fa:	70fb      	strb	r3, [r7, #3]

  if (enable == ENABLE) {
 80005fc:	78fb      	ldrb	r3, [r7, #3]
 80005fe:	2b01      	cmp	r3, #1
 8000600:	d141      	bne.n	8000686 <GPIO_PClkControl+0x96>

    if (pGPIOx == GPIOA) {
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	4a43      	ldr	r2, [pc, #268]	; (8000714 <GPIO_PClkControl+0x124>)
 8000606:	4293      	cmp	r3, r2
 8000608:	d106      	bne.n	8000618 <GPIO_PClkControl+0x28>
      GPIOA_PCLK_EN();
 800060a:	4b43      	ldr	r3, [pc, #268]	; (8000718 <GPIO_PClkControl+0x128>)
 800060c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800060e:	4a42      	ldr	r2, [pc, #264]	; (8000718 <GPIO_PClkControl+0x128>)
 8000610:	f043 0301 	orr.w	r3, r3, #1
 8000614:	6313      	str	r3, [r2, #48]	; 0x30
      GPIOE_PCLK_DIS();
    } else if (pGPIOx == GPIOH) {
      GPIOH_PCLK_DIS();
    }
  }
}
 8000616:	e077      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOB) {
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	4a40      	ldr	r2, [pc, #256]	; (800071c <GPIO_PClkControl+0x12c>)
 800061c:	4293      	cmp	r3, r2
 800061e:	d106      	bne.n	800062e <GPIO_PClkControl+0x3e>
      GPIOB_PCLK_EN();
 8000620:	4b3d      	ldr	r3, [pc, #244]	; (8000718 <GPIO_PClkControl+0x128>)
 8000622:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000624:	4a3c      	ldr	r2, [pc, #240]	; (8000718 <GPIO_PClkControl+0x128>)
 8000626:	f043 0302 	orr.w	r3, r3, #2
 800062a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800062c:	e06c      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOC) {
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	4a3b      	ldr	r2, [pc, #236]	; (8000720 <GPIO_PClkControl+0x130>)
 8000632:	4293      	cmp	r3, r2
 8000634:	d106      	bne.n	8000644 <GPIO_PClkControl+0x54>
      GPIOC_PCLK_EN();
 8000636:	4b38      	ldr	r3, [pc, #224]	; (8000718 <GPIO_PClkControl+0x128>)
 8000638:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800063a:	4a37      	ldr	r2, [pc, #220]	; (8000718 <GPIO_PClkControl+0x128>)
 800063c:	f043 0304 	orr.w	r3, r3, #4
 8000640:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000642:	e061      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOD) {
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	4a37      	ldr	r2, [pc, #220]	; (8000724 <GPIO_PClkControl+0x134>)
 8000648:	4293      	cmp	r3, r2
 800064a:	d106      	bne.n	800065a <GPIO_PClkControl+0x6a>
      GPIOD_PCLK_EN();
 800064c:	4b32      	ldr	r3, [pc, #200]	; (8000718 <GPIO_PClkControl+0x128>)
 800064e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000650:	4a31      	ldr	r2, [pc, #196]	; (8000718 <GPIO_PClkControl+0x128>)
 8000652:	f043 0308 	orr.w	r3, r3, #8
 8000656:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000658:	e056      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOE) {
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	4a32      	ldr	r2, [pc, #200]	; (8000728 <GPIO_PClkControl+0x138>)
 800065e:	4293      	cmp	r3, r2
 8000660:	d106      	bne.n	8000670 <GPIO_PClkControl+0x80>
      GPIOE_PCLK_EN();
 8000662:	4b2d      	ldr	r3, [pc, #180]	; (8000718 <GPIO_PClkControl+0x128>)
 8000664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000666:	4a2c      	ldr	r2, [pc, #176]	; (8000718 <GPIO_PClkControl+0x128>)
 8000668:	f043 0310 	orr.w	r3, r3, #16
 800066c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800066e:	e04b      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOH) {
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	4a2e      	ldr	r2, [pc, #184]	; (800072c <GPIO_PClkControl+0x13c>)
 8000674:	4293      	cmp	r3, r2
 8000676:	d147      	bne.n	8000708 <GPIO_PClkControl+0x118>
      GPIOH_PCLK_EN();
 8000678:	4b27      	ldr	r3, [pc, #156]	; (8000718 <GPIO_PClkControl+0x128>)
 800067a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800067c:	4a26      	ldr	r2, [pc, #152]	; (8000718 <GPIO_PClkControl+0x128>)
 800067e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000682:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000684:	e040      	b.n	8000708 <GPIO_PClkControl+0x118>
    if (pGPIOx == GPIOA) {
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	4a22      	ldr	r2, [pc, #136]	; (8000714 <GPIO_PClkControl+0x124>)
 800068a:	4293      	cmp	r3, r2
 800068c:	d106      	bne.n	800069c <GPIO_PClkControl+0xac>
      GPIOA_PCLK_DIS();
 800068e:	4b22      	ldr	r3, [pc, #136]	; (8000718 <GPIO_PClkControl+0x128>)
 8000690:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000692:	4a21      	ldr	r2, [pc, #132]	; (8000718 <GPIO_PClkControl+0x128>)
 8000694:	f023 0301 	bic.w	r3, r3, #1
 8000698:	6313      	str	r3, [r2, #48]	; 0x30
}
 800069a:	e035      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOB) {
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	4a1f      	ldr	r2, [pc, #124]	; (800071c <GPIO_PClkControl+0x12c>)
 80006a0:	4293      	cmp	r3, r2
 80006a2:	d106      	bne.n	80006b2 <GPIO_PClkControl+0xc2>
      GPIOB_PCLK_DIS();
 80006a4:	4b1c      	ldr	r3, [pc, #112]	; (8000718 <GPIO_PClkControl+0x128>)
 80006a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006a8:	4a1b      	ldr	r2, [pc, #108]	; (8000718 <GPIO_PClkControl+0x128>)
 80006aa:	f023 0302 	bic.w	r3, r3, #2
 80006ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006b0:	e02a      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOC) {
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	4a1a      	ldr	r2, [pc, #104]	; (8000720 <GPIO_PClkControl+0x130>)
 80006b6:	4293      	cmp	r3, r2
 80006b8:	d106      	bne.n	80006c8 <GPIO_PClkControl+0xd8>
      GPIOC_PCLK_DIS();
 80006ba:	4b17      	ldr	r3, [pc, #92]	; (8000718 <GPIO_PClkControl+0x128>)
 80006bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006be:	4a16      	ldr	r2, [pc, #88]	; (8000718 <GPIO_PClkControl+0x128>)
 80006c0:	f023 0304 	bic.w	r3, r3, #4
 80006c4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006c6:	e01f      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOD) {
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	4a16      	ldr	r2, [pc, #88]	; (8000724 <GPIO_PClkControl+0x134>)
 80006cc:	4293      	cmp	r3, r2
 80006ce:	d106      	bne.n	80006de <GPIO_PClkControl+0xee>
      GPIOD_PCLK_DIS();
 80006d0:	4b11      	ldr	r3, [pc, #68]	; (8000718 <GPIO_PClkControl+0x128>)
 80006d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006d4:	4a10      	ldr	r2, [pc, #64]	; (8000718 <GPIO_PClkControl+0x128>)
 80006d6:	f023 0308 	bic.w	r3, r3, #8
 80006da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006dc:	e014      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOE) {
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	4a11      	ldr	r2, [pc, #68]	; (8000728 <GPIO_PClkControl+0x138>)
 80006e2:	4293      	cmp	r3, r2
 80006e4:	d106      	bne.n	80006f4 <GPIO_PClkControl+0x104>
      GPIOE_PCLK_DIS();
 80006e6:	4b0c      	ldr	r3, [pc, #48]	; (8000718 <GPIO_PClkControl+0x128>)
 80006e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ea:	4a0b      	ldr	r2, [pc, #44]	; (8000718 <GPIO_PClkControl+0x128>)
 80006ec:	f023 0310 	bic.w	r3, r3, #16
 80006f0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006f2:	e009      	b.n	8000708 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOH) {
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	4a0d      	ldr	r2, [pc, #52]	; (800072c <GPIO_PClkControl+0x13c>)
 80006f8:	4293      	cmp	r3, r2
 80006fa:	d105      	bne.n	8000708 <GPIO_PClkControl+0x118>
      GPIOH_PCLK_DIS();
 80006fc:	4b06      	ldr	r3, [pc, #24]	; (8000718 <GPIO_PClkControl+0x128>)
 80006fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000700:	4a05      	ldr	r2, [pc, #20]	; (8000718 <GPIO_PClkControl+0x128>)
 8000702:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000706:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000708:	bf00      	nop
 800070a:	370c      	adds	r7, #12
 800070c:	46bd      	mov	sp, r7
 800070e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000712:	4770      	bx	lr
 8000714:	40020000 	.word	0x40020000
 8000718:	40023800 	.word	0x40023800
 800071c:	40020400 	.word	0x40020400
 8000720:	40020800 	.word	0x40020800
 8000724:	40020c00 	.word	0x40020c00
 8000728:	40021000 	.word	0x40021000
 800072c:	40021c00 	.word	0x40021c00

08000730 <GPIO_TogglePin>:
 * @brief Toggle 'Pin' of port GPIOx
 *
 * @param pGPIOx base address of gpio peripheral
 * @param Pin    pin number
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t Pin){
 8000730:	b480      	push	{r7}
 8000732:	b083      	sub	sp, #12
 8000734:	af00      	add	r7, sp, #0
 8000736:	6078      	str	r0, [r7, #4]
 8000738:	460b      	mov	r3, r1
 800073a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << Pin);
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	695b      	ldr	r3, [r3, #20]
 8000740:	78fa      	ldrb	r2, [r7, #3]
 8000742:	2101      	movs	r1, #1
 8000744:	fa01 f202 	lsl.w	r2, r1, r2
 8000748:	405a      	eors	r2, r3
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	615a      	str	r2, [r3, #20]
}
 800074e:	bf00      	nop
 8000750:	370c      	adds	r7, #12
 8000752:	46bd      	mov	sp, r7
 8000754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000758:	4770      	bx	lr
	...

0800075c <GPIO_IRQConfig>:
 *
 * @param IRQNumber
 * @param IRQPriority priority for interrupt
 * @param enable      ENABLE/DISABLE macros
 */
void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t enable){
 800075c:	b480      	push	{r7}
 800075e:	b083      	sub	sp, #12
 8000760:	af00      	add	r7, sp, #0
 8000762:	4603      	mov	r3, r0
 8000764:	460a      	mov	r2, r1
 8000766:	71fb      	strb	r3, [r7, #7]
 8000768:	4613      	mov	r3, r2
 800076a:	71bb      	strb	r3, [r7, #6]

	if(enable == ENABLE){
 800076c:	79bb      	ldrb	r3, [r7, #6]
 800076e:	2b01      	cmp	r3, #1
 8000770:	d133      	bne.n	80007da <GPIO_IRQConfig+0x7e>

		if(IRQNumber <=31){
 8000772:	79fb      	ldrb	r3, [r7, #7]
 8000774:	2b1f      	cmp	r3, #31
 8000776:	d80a      	bhi.n	800078e <GPIO_IRQConfig+0x32>

			*NVIC_ISER0 |= (1<<IRQNumber);
 8000778:	4b35      	ldr	r3, [pc, #212]	; (8000850 <GPIO_IRQConfig+0xf4>)
 800077a:	681b      	ldr	r3, [r3, #0]
 800077c:	79fa      	ldrb	r2, [r7, #7]
 800077e:	2101      	movs	r1, #1
 8000780:	fa01 f202 	lsl.w	r2, r1, r2
 8000784:	4611      	mov	r1, r2
 8000786:	4a32      	ldr	r2, [pc, #200]	; (8000850 <GPIO_IRQConfig+0xf4>)
 8000788:	430b      	orrs	r3, r1
 800078a:	6013      	str	r3, [r2, #0]
			*NVIC_ICER2 |= (1<< (IRQNumber%32) );
		}

	}

}
 800078c:	e059      	b.n	8000842 <GPIO_IRQConfig+0xe6>
		}else if (IRQNumber > 31 && IRQNumber < 64){
 800078e:	79fb      	ldrb	r3, [r7, #7]
 8000790:	2b1f      	cmp	r3, #31
 8000792:	d90f      	bls.n	80007b4 <GPIO_IRQConfig+0x58>
 8000794:	79fb      	ldrb	r3, [r7, #7]
 8000796:	2b3f      	cmp	r3, #63	; 0x3f
 8000798:	d80c      	bhi.n	80007b4 <GPIO_IRQConfig+0x58>
			*NVIC_ISER1 |= (1<< (IRQNumber%32) );
 800079a:	4b2e      	ldr	r3, [pc, #184]	; (8000854 <GPIO_IRQConfig+0xf8>)
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	79fa      	ldrb	r2, [r7, #7]
 80007a0:	f002 021f 	and.w	r2, r2, #31
 80007a4:	2101      	movs	r1, #1
 80007a6:	fa01 f202 	lsl.w	r2, r1, r2
 80007aa:	4611      	mov	r1, r2
 80007ac:	4a29      	ldr	r2, [pc, #164]	; (8000854 <GPIO_IRQConfig+0xf8>)
 80007ae:	430b      	orrs	r3, r1
 80007b0:	6013      	str	r3, [r2, #0]
 80007b2:	e046      	b.n	8000842 <GPIO_IRQConfig+0xe6>
		}else if (IRQNumber >=64 && IRQNumber < 96){
 80007b4:	79fb      	ldrb	r3, [r7, #7]
 80007b6:	2b3f      	cmp	r3, #63	; 0x3f
 80007b8:	d943      	bls.n	8000842 <GPIO_IRQConfig+0xe6>
 80007ba:	79fb      	ldrb	r3, [r7, #7]
 80007bc:	2b5f      	cmp	r3, #95	; 0x5f
 80007be:	d840      	bhi.n	8000842 <GPIO_IRQConfig+0xe6>
			*NVIC_ISER2 |= (1<< (IRQNumber%32) );
 80007c0:	4b25      	ldr	r3, [pc, #148]	; (8000858 <GPIO_IRQConfig+0xfc>)
 80007c2:	681b      	ldr	r3, [r3, #0]
 80007c4:	79fa      	ldrb	r2, [r7, #7]
 80007c6:	f002 021f 	and.w	r2, r2, #31
 80007ca:	2101      	movs	r1, #1
 80007cc:	fa01 f202 	lsl.w	r2, r1, r2
 80007d0:	4611      	mov	r1, r2
 80007d2:	4a21      	ldr	r2, [pc, #132]	; (8000858 <GPIO_IRQConfig+0xfc>)
 80007d4:	430b      	orrs	r3, r1
 80007d6:	6013      	str	r3, [r2, #0]
}
 80007d8:	e033      	b.n	8000842 <GPIO_IRQConfig+0xe6>
		if(IRQNumber <=31){
 80007da:	79fb      	ldrb	r3, [r7, #7]
 80007dc:	2b1f      	cmp	r3, #31
 80007de:	d80a      	bhi.n	80007f6 <GPIO_IRQConfig+0x9a>
			*NVIC_ICER0 |= (1<<IRQNumber);
 80007e0:	4b1e      	ldr	r3, [pc, #120]	; (800085c <GPIO_IRQConfig+0x100>)
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	79fa      	ldrb	r2, [r7, #7]
 80007e6:	2101      	movs	r1, #1
 80007e8:	fa01 f202 	lsl.w	r2, r1, r2
 80007ec:	4611      	mov	r1, r2
 80007ee:	4a1b      	ldr	r2, [pc, #108]	; (800085c <GPIO_IRQConfig+0x100>)
 80007f0:	430b      	orrs	r3, r1
 80007f2:	6013      	str	r3, [r2, #0]
}
 80007f4:	e025      	b.n	8000842 <GPIO_IRQConfig+0xe6>
		}else if (IRQNumber > 31 && IRQNumber < 64){
 80007f6:	79fb      	ldrb	r3, [r7, #7]
 80007f8:	2b1f      	cmp	r3, #31
 80007fa:	d90f      	bls.n	800081c <GPIO_IRQConfig+0xc0>
 80007fc:	79fb      	ldrb	r3, [r7, #7]
 80007fe:	2b3f      	cmp	r3, #63	; 0x3f
 8000800:	d80c      	bhi.n	800081c <GPIO_IRQConfig+0xc0>
			*NVIC_ICER1 |= (1<< (IRQNumber%32) );
 8000802:	4b17      	ldr	r3, [pc, #92]	; (8000860 <GPIO_IRQConfig+0x104>)
 8000804:	681b      	ldr	r3, [r3, #0]
 8000806:	79fa      	ldrb	r2, [r7, #7]
 8000808:	f002 021f 	and.w	r2, r2, #31
 800080c:	2101      	movs	r1, #1
 800080e:	fa01 f202 	lsl.w	r2, r1, r2
 8000812:	4611      	mov	r1, r2
 8000814:	4a12      	ldr	r2, [pc, #72]	; (8000860 <GPIO_IRQConfig+0x104>)
 8000816:	430b      	orrs	r3, r1
 8000818:	6013      	str	r3, [r2, #0]
 800081a:	e012      	b.n	8000842 <GPIO_IRQConfig+0xe6>
		}else if (IRQNumber >=64 && IRQNumber < 96){
 800081c:	79fb      	ldrb	r3, [r7, #7]
 800081e:	2b3f      	cmp	r3, #63	; 0x3f
 8000820:	d90f      	bls.n	8000842 <GPIO_IRQConfig+0xe6>
 8000822:	79fb      	ldrb	r3, [r7, #7]
 8000824:	2b5f      	cmp	r3, #95	; 0x5f
 8000826:	d80c      	bhi.n	8000842 <GPIO_IRQConfig+0xe6>
			*NVIC_ICER2 |= (1<< (IRQNumber%32) );
 8000828:	4b0e      	ldr	r3, [pc, #56]	; (8000864 <GPIO_IRQConfig+0x108>)
 800082a:	681b      	ldr	r3, [r3, #0]
 800082c:	79fa      	ldrb	r2, [r7, #7]
 800082e:	f002 021f 	and.w	r2, r2, #31
 8000832:	2101      	movs	r1, #1
 8000834:	fa01 f202 	lsl.w	r2, r1, r2
 8000838:	4611      	mov	r1, r2
 800083a:	4a0a      	ldr	r2, [pc, #40]	; (8000864 <GPIO_IRQConfig+0x108>)
 800083c:	430b      	orrs	r3, r1
 800083e:	6013      	str	r3, [r2, #0]
}
 8000840:	e7ff      	b.n	8000842 <GPIO_IRQConfig+0xe6>
 8000842:	bf00      	nop
 8000844:	370c      	adds	r7, #12
 8000846:	46bd      	mov	sp, r7
 8000848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	e000e100 	.word	0xe000e100
 8000854:	e000e104 	.word	0xe000e104
 8000858:	e000e108 	.word	0xe000e108
 800085c:	e000e180 	.word	0xe000e180
 8000860:	e000e184 	.word	0xe000e184
 8000864:	e000e188 	.word	0xe000e188

08000868 <GPIO_IRQHandling>:

	*NVIC_IPRx(IRQNumber) |= ((IRQPriority << 8*(IRQNumber%4)) << (8-NO_PR_BITS_IMPLEMENTED));

}

void GPIO_IRQHandling(uint8_t Pin){
 8000868:	b480      	push	{r7}
 800086a:	b083      	sub	sp, #12
 800086c:	af00      	add	r7, sp, #0
 800086e:	4603      	mov	r3, r0
 8000870:	71fb      	strb	r3, [r7, #7]
	// clear bit in EXTI pending register by writing 1
	if(EXTI->PR & (1 << Pin)){
 8000872:	4b0c      	ldr	r3, [pc, #48]	; (80008a4 <GPIO_IRQHandling+0x3c>)
 8000874:	695b      	ldr	r3, [r3, #20]
 8000876:	79fa      	ldrb	r2, [r7, #7]
 8000878:	2101      	movs	r1, #1
 800087a:	fa01 f202 	lsl.w	r2, r1, r2
 800087e:	4013      	ands	r3, r2
 8000880:	2b00      	cmp	r3, #0
 8000882:	d009      	beq.n	8000898 <GPIO_IRQHandling+0x30>
		EXTI->PR |= (1 << Pin);
 8000884:	4b07      	ldr	r3, [pc, #28]	; (80008a4 <GPIO_IRQHandling+0x3c>)
 8000886:	695b      	ldr	r3, [r3, #20]
 8000888:	79fa      	ldrb	r2, [r7, #7]
 800088a:	2101      	movs	r1, #1
 800088c:	fa01 f202 	lsl.w	r2, r1, r2
 8000890:	4611      	mov	r1, r2
 8000892:	4a04      	ldr	r2, [pc, #16]	; (80008a4 <GPIO_IRQHandling+0x3c>)
 8000894:	430b      	orrs	r3, r1
 8000896:	6153      	str	r3, [r2, #20]
	}
}
 8000898:	bf00      	nop
 800089a:	370c      	adds	r7, #12
 800089c:	46bd      	mov	sp, r7
 800089e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a2:	4770      	bx	lr
 80008a4:	40013c00 	.word	0x40013c00

080008a8 <__libc_init_array>:
 80008a8:	b570      	push	{r4, r5, r6, lr}
 80008aa:	4d0d      	ldr	r5, [pc, #52]	; (80008e0 <__libc_init_array+0x38>)
 80008ac:	4c0d      	ldr	r4, [pc, #52]	; (80008e4 <__libc_init_array+0x3c>)
 80008ae:	1b64      	subs	r4, r4, r5
 80008b0:	10a4      	asrs	r4, r4, #2
 80008b2:	2600      	movs	r6, #0
 80008b4:	42a6      	cmp	r6, r4
 80008b6:	d109      	bne.n	80008cc <__libc_init_array+0x24>
 80008b8:	4d0b      	ldr	r5, [pc, #44]	; (80008e8 <__libc_init_array+0x40>)
 80008ba:	4c0c      	ldr	r4, [pc, #48]	; (80008ec <__libc_init_array+0x44>)
 80008bc:	f000 f818 	bl	80008f0 <_init>
 80008c0:	1b64      	subs	r4, r4, r5
 80008c2:	10a4      	asrs	r4, r4, #2
 80008c4:	2600      	movs	r6, #0
 80008c6:	42a6      	cmp	r6, r4
 80008c8:	d105      	bne.n	80008d6 <__libc_init_array+0x2e>
 80008ca:	bd70      	pop	{r4, r5, r6, pc}
 80008cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80008d0:	4798      	blx	r3
 80008d2:	3601      	adds	r6, #1
 80008d4:	e7ee      	b.n	80008b4 <__libc_init_array+0xc>
 80008d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80008da:	4798      	blx	r3
 80008dc:	3601      	adds	r6, #1
 80008de:	e7f2      	b.n	80008c6 <__libc_init_array+0x1e>
 80008e0:	08000908 	.word	0x08000908
 80008e4:	08000908 	.word	0x08000908
 80008e8:	08000908 	.word	0x08000908
 80008ec:	0800090c 	.word	0x0800090c

080008f0 <_init>:
 80008f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008f2:	bf00      	nop
 80008f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008f6:	bc08      	pop	{r3}
 80008f8:	469e      	mov	lr, r3
 80008fa:	4770      	bx	lr

080008fc <_fini>:
 80008fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008fe:	bf00      	nop
 8000900:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000902:	bc08      	pop	{r3}
 8000904:	469e      	mov	lr, r3
 8000906:	4770      	bx	lr
