
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006e4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000878  08000880  00010880  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000878  08000878  00010880  2**0
                  CONTENTS
  4 .ARM          00000000  08000878  08000878  00010880  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000878  08000880  00010880  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000878  08000878  00010878  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800087c  0800087c  0001087c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010880  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000000  08000880  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000034  08000880  00020034  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010880  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000108b0  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000099b  00000000  00000000  000108f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002c2  00000000  00000000  0001128e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00011550  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00011618  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000014c0  00000000  00000000  000116a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d61  00000000  00000000  00012b64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005803  00000000  00000000  000138c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000264  00000000  00000000  000190c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008a  00000000  00000000  0001932c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000860 	.word	0x08000860

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000860 	.word	0x08000860

080001d4 <delay>:
 */

#include "stm32f401xx.h"
#include "stm32f401xx_gpio_driver.h"

void delay(void){
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(int i=0 ;i<500000/2;i++){
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a04      	ldr	r2, [pc, #16]	; (80001fc <delay+0x28>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	ddf8      	ble.n	80001e0 <delay+0xc>

	}
}
 80001ee:	bf00      	nop
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fa:	4770      	bx	lr
 80001fc:	0003d08f 	.word	0x0003d08f

08000200 <main>:
GPIO_Handle_t gpio_led;
GPIO_Handle_t gpio_button;

int main(){
 8000200:	b580      	push	{r7, lr}
 8000202:	af00      	add	r7, sp, #0

	/*Init led pin*/
	gpio_led.pGPIOx = GPIOA;
 8000204:	4b21      	ldr	r3, [pc, #132]	; (800028c <main+0x8c>)
 8000206:	4a22      	ldr	r2, [pc, #136]	; (8000290 <main+0x90>)
 8000208:	601a      	str	r2, [r3, #0]
	gpio_led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 800020a:	4b20      	ldr	r3, [pc, #128]	; (800028c <main+0x8c>)
 800020c:	2201      	movs	r2, #1
 800020e:	715a      	strb	r2, [r3, #5]
	gpio_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_8;
 8000210:	4b1e      	ldr	r3, [pc, #120]	; (800028c <main+0x8c>)
 8000212:	2208      	movs	r2, #8
 8000214:	711a      	strb	r2, [r3, #4]
	gpio_led.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPTYPE_PP;
 8000216:	4b1d      	ldr	r3, [pc, #116]	; (800028c <main+0x8c>)
 8000218:	2200      	movs	r2, #0
 800021a:	721a      	strb	r2, [r3, #8]
	gpio_led.GPIO_PinConfig.GPIO_PUPDControl = GPIO_NO_PUPD;
 800021c:	4b1b      	ldr	r3, [pc, #108]	; (800028c <main+0x8c>)
 800021e:	2200      	movs	r2, #0
 8000220:	71da      	strb	r2, [r3, #7]
	GPIO_PClkControl(gpio_led.pGPIOx, ENABLE);
 8000222:	4b1a      	ldr	r3, [pc, #104]	; (800028c <main+0x8c>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	2101      	movs	r1, #1
 8000228:	4618      	mov	r0, r3
 800022a:	f000 fa09 	bl	8000640 <GPIO_PClkControl>
	GPIO_Init(&gpio_led);
 800022e:	4817      	ldr	r0, [pc, #92]	; (800028c <main+0x8c>)
 8000230:	f000 f86c 	bl	800030c <GPIO_Init>

	/*Init button pin*/
	gpio_button.pGPIOx = GPIOB;
 8000234:	4b17      	ldr	r3, [pc, #92]	; (8000294 <main+0x94>)
 8000236:	4a18      	ldr	r2, [pc, #96]	; (8000298 <main+0x98>)
 8000238:	601a      	str	r2, [r3, #0]
	gpio_button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_12;
 800023a:	4b16      	ldr	r3, [pc, #88]	; (8000294 <main+0x94>)
 800023c:	220c      	movs	r2, #12
 800023e:	711a      	strb	r2, [r3, #4]
	gpio_button.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_INPUT;
 8000240:	4b14      	ldr	r3, [pc, #80]	; (8000294 <main+0x94>)
 8000242:	2200      	movs	r2, #0
 8000244:	715a      	strb	r2, [r3, #5]
//	gpio_button.GPIO_PinConfig.GPIO_PinOPType = GPIO_OPTYPE_PP;
	gpio_button.GPIO_PinConfig.GPIO_PUPDControl = GPIO_PU;
 8000246:	4b13      	ldr	r3, [pc, #76]	; (8000294 <main+0x94>)
 8000248:	2201      	movs	r2, #1
 800024a:	71da      	strb	r2, [r3, #7]
	GPIO_Init(&gpio_button);
 800024c:	4811      	ldr	r0, [pc, #68]	; (8000294 <main+0x94>)
 800024e:	f000 f85d 	bl	800030c <GPIO_Init>

	GPIO_PClkControl(gpio_button.pGPIOx, ENABLE);
 8000252:	4b10      	ldr	r3, [pc, #64]	; (8000294 <main+0x94>)
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	2101      	movs	r1, #1
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f9f1 	bl	8000640 <GPIO_PClkControl>
//	GPIO_IRQConfig(IRQ_NO_EXTI15_10, ENABLE);
//	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, 1);
	while(1){
		if(GPIO_ReadFromInpPin(gpio_button.pGPIOx, gpio_button.GPIO_PinConfig.GPIO_PinNumber) == GPIO_PIN_RESET){
 800025e:	4b0d      	ldr	r3, [pc, #52]	; (8000294 <main+0x94>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	4a0c      	ldr	r2, [pc, #48]	; (8000294 <main+0x94>)
 8000264:	7912      	ldrb	r2, [r2, #4]
 8000266:	4611      	mov	r1, r2
 8000268:	4618      	mov	r0, r3
 800026a:	f000 fa89 	bl	8000780 <GPIO_ReadFromInpPin>
 800026e:	4603      	mov	r3, r0
 8000270:	2b00      	cmp	r3, #0
 8000272:	d1f4      	bne.n	800025e <main+0x5e>
			delay(); /*for button debouncing  */
 8000274:	f7ff ffae 	bl	80001d4 <delay>
			GPIO_TogglePin(gpio_led.pGPIOx, gpio_led.GPIO_PinConfig.GPIO_PinNumber);
 8000278:	4b04      	ldr	r3, [pc, #16]	; (800028c <main+0x8c>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	4a03      	ldr	r2, [pc, #12]	; (800028c <main+0x8c>)
 800027e:	7912      	ldrb	r2, [r2, #4]
 8000280:	4611      	mov	r1, r2
 8000282:	4618      	mov	r0, r3
 8000284:	f000 fa92 	bl	80007ac <GPIO_TogglePin>
		if(GPIO_ReadFromInpPin(gpio_button.pGPIOx, gpio_button.GPIO_PinConfig.GPIO_PinNumber) == GPIO_PIN_RESET){
 8000288:	e7e9      	b.n	800025e <main+0x5e>
 800028a:	bf00      	nop
 800028c:	2000001c 	.word	0x2000001c
 8000290:	40020000 	.word	0x40020000
 8000294:	20000028 	.word	0x20000028
 8000298:	40020400 	.word	0x40020400

0800029c <EXTI15_10_IRQHandler>:

	return 0;

}

void EXTI15_10_IRQHandler(void){
 800029c:	b580      	push	{r7, lr}
 800029e:	af00      	add	r7, sp, #0

	GPIO_IRQHandling(GPIO_PIN_12);
 80002a0:	200c      	movs	r0, #12
 80002a2:	f000 fa99 	bl	80007d8 <GPIO_IRQHandling>
	GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 80002a6:	2108      	movs	r1, #8
 80002a8:	4802      	ldr	r0, [pc, #8]	; (80002b4 <EXTI15_10_IRQHandler+0x18>)
 80002aa:	f000 fa7f 	bl	80007ac <GPIO_TogglePin>

}
 80002ae:	bf00      	nop
 80002b0:	bd80      	pop	{r7, pc}
 80002b2:	bf00      	nop
 80002b4:	40020000 	.word	0x40020000

080002b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002b8:	480d      	ldr	r0, [pc, #52]	; (80002f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ba:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002bc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c0:	480c      	ldr	r0, [pc, #48]	; (80002f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002c2:	490d      	ldr	r1, [pc, #52]	; (80002f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002c4:	4a0d      	ldr	r2, [pc, #52]	; (80002fc <LoopForever+0xe>)
  movs r3, #0
 80002c6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002c8:	e002      	b.n	80002d0 <LoopCopyDataInit>

080002ca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002cc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ce:	3304      	adds	r3, #4

080002d0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002d2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002d4:	d3f9      	bcc.n	80002ca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002d6:	4a0a      	ldr	r2, [pc, #40]	; (8000300 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002d8:	4c0a      	ldr	r4, [pc, #40]	; (8000304 <LoopForever+0x16>)
  movs r3, #0
 80002da:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002dc:	e001      	b.n	80002e2 <LoopFillZerobss>

080002de <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002de:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e0:	3204      	adds	r2, #4

080002e2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002e2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002e4:	d3fb      	bcc.n	80002de <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002e6:	f000 fa97 	bl	8000818 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ea:	f7ff ff89 	bl	8000200 <main>

080002ee <LoopForever>:

LoopForever:
  b LoopForever
 80002ee:	e7fe      	b.n	80002ee <LoopForever>
  ldr   r0, =_estack
 80002f0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002f8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002fc:	08000880 	.word	0x08000880
  ldr r2, =_sbss
 8000300:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000304:	20000034 	.word	0x20000034

08000308 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000308:	e7fe      	b.n	8000308 <ADC_IRQHandler>
	...

0800030c <GPIO_Init>:
/**
 * @brief Initialize GPIO port
 *
 * @param pGPIOx base address of gpio peripheral
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 800030c:	b580      	push	{r7, lr}
 800030e:	b086      	sub	sp, #24
 8000310:	af00      	add	r7, sp, #0
 8000312:	6078      	str	r0, [r7, #4]

	uint8_t pin_number = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	791b      	ldrb	r3, [r3, #4]
 8000318:	75fb      	strb	r3, [r7, #23]
	uint32_t temp=0;
 800031a:	2300      	movs	r3, #0
 800031c:	613b      	str	r3, [r7, #16]

	// enable peripheral clock
	GPIO_PClkControl(pGPIOHandle->pGPIOx, ENABLE);
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	2101      	movs	r1, #1
 8000324:	4618      	mov	r0, r3
 8000326:	f000 f98b 	bl	8000640 <GPIO_PClkControl>

	//1. configure mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	795b      	ldrb	r3, [r3, #5]
 800032e:	2b03      	cmp	r3, #3
 8000330:	d81d      	bhi.n	800036e <GPIO_Init+0x62>
		// non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pin_number));
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	795b      	ldrb	r3, [r3, #5]
 8000336:	461a      	mov	r2, r3
 8000338:	7dfb      	ldrb	r3, [r7, #23]
 800033a:	005b      	lsls	r3, r3, #1
 800033c:	fa02 f303 	lsl.w	r3, r2, r3
 8000340:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<pin_number);
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	681a      	ldr	r2, [r3, #0]
 8000348:	7dfb      	ldrb	r3, [r7, #23]
 800034a:	2103      	movs	r1, #3
 800034c:	fa01 f303 	lsl.w	r3, r1, r3
 8000350:	43db      	mvns	r3, r3
 8000352:	4619      	mov	r1, r3
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	400a      	ands	r2, r1
 800035a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	6819      	ldr	r1, [r3, #0]
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	693a      	ldr	r2, [r7, #16]
 8000368:	430a      	orrs	r2, r1
 800036a:	601a      	str	r2, [r3, #0]
 800036c:	e0ac      	b.n	80004c8 <GPIO_Init+0x1bc>
	}else{
		// interrupt mode

		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<pin_number); // clear to configure pin mode type as input
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	681a      	ldr	r2, [r3, #0]
 8000374:	7dfb      	ldrb	r3, [r7, #23]
 8000376:	2103      	movs	r1, #3
 8000378:	fa01 f303 	lsl.w	r3, r1, r3
 800037c:	43db      	mvns	r3, r3
 800037e:	4619      	mov	r1, r3
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	400a      	ands	r2, r1
 8000386:	601a      	str	r2, [r3, #0]

		//1. Configure rising/falling edge

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	795b      	ldrb	r3, [r3, #5]
 800038c:	2b04      	cmp	r3, #4
 800038e:	d115      	bne.n	80003bc <GPIO_Init+0xb0>
			EXTI->FTSR |= (1<<pin_number);
 8000390:	4b8f      	ldr	r3, [pc, #572]	; (80005d0 <GPIO_Init+0x2c4>)
 8000392:	68db      	ldr	r3, [r3, #12]
 8000394:	7dfa      	ldrb	r2, [r7, #23]
 8000396:	2101      	movs	r1, #1
 8000398:	fa01 f202 	lsl.w	r2, r1, r2
 800039c:	4611      	mov	r1, r2
 800039e:	4a8c      	ldr	r2, [pc, #560]	; (80005d0 <GPIO_Init+0x2c4>)
 80003a0:	430b      	orrs	r3, r1
 80003a2:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1<<pin_number); //clear corresponding RTSR bit
 80003a4:	4b8a      	ldr	r3, [pc, #552]	; (80005d0 <GPIO_Init+0x2c4>)
 80003a6:	689b      	ldr	r3, [r3, #8]
 80003a8:	7dfa      	ldrb	r2, [r7, #23]
 80003aa:	2101      	movs	r1, #1
 80003ac:	fa01 f202 	lsl.w	r2, r1, r2
 80003b0:	43d2      	mvns	r2, r2
 80003b2:	4611      	mov	r1, r2
 80003b4:	4a86      	ldr	r2, [pc, #536]	; (80005d0 <GPIO_Init+0x2c4>)
 80003b6:	400b      	ands	r3, r1
 80003b8:	6093      	str	r3, [r2, #8]
 80003ba:	e031      	b.n	8000420 <GPIO_Init+0x114>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	795b      	ldrb	r3, [r3, #5]
 80003c0:	2b05      	cmp	r3, #5
 80003c2:	d115      	bne.n	80003f0 <GPIO_Init+0xe4>
			EXTI->RTSR |= (1<<pin_number);
 80003c4:	4b82      	ldr	r3, [pc, #520]	; (80005d0 <GPIO_Init+0x2c4>)
 80003c6:	689b      	ldr	r3, [r3, #8]
 80003c8:	7dfa      	ldrb	r2, [r7, #23]
 80003ca:	2101      	movs	r1, #1
 80003cc:	fa01 f202 	lsl.w	r2, r1, r2
 80003d0:	4611      	mov	r1, r2
 80003d2:	4a7f      	ldr	r2, [pc, #508]	; (80005d0 <GPIO_Init+0x2c4>)
 80003d4:	430b      	orrs	r3, r1
 80003d6:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1<<pin_number); //clear corresponding FTSR bit
 80003d8:	4b7d      	ldr	r3, [pc, #500]	; (80005d0 <GPIO_Init+0x2c4>)
 80003da:	68db      	ldr	r3, [r3, #12]
 80003dc:	7dfa      	ldrb	r2, [r7, #23]
 80003de:	2101      	movs	r1, #1
 80003e0:	fa01 f202 	lsl.w	r2, r1, r2
 80003e4:	43d2      	mvns	r2, r2
 80003e6:	4611      	mov	r1, r2
 80003e8:	4a79      	ldr	r2, [pc, #484]	; (80005d0 <GPIO_Init+0x2c4>)
 80003ea:	400b      	ands	r3, r1
 80003ec:	60d3      	str	r3, [r2, #12]
 80003ee:	e017      	b.n	8000420 <GPIO_Init+0x114>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FRT){
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	795b      	ldrb	r3, [r3, #5]
 80003f4:	2b06      	cmp	r3, #6
 80003f6:	d113      	bne.n	8000420 <GPIO_Init+0x114>
			EXTI->RTSR |= (1<<pin_number);
 80003f8:	4b75      	ldr	r3, [pc, #468]	; (80005d0 <GPIO_Init+0x2c4>)
 80003fa:	689b      	ldr	r3, [r3, #8]
 80003fc:	7dfa      	ldrb	r2, [r7, #23]
 80003fe:	2101      	movs	r1, #1
 8000400:	fa01 f202 	lsl.w	r2, r1, r2
 8000404:	4611      	mov	r1, r2
 8000406:	4a72      	ldr	r2, [pc, #456]	; (80005d0 <GPIO_Init+0x2c4>)
 8000408:	430b      	orrs	r3, r1
 800040a:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1<<pin_number);
 800040c:	4b70      	ldr	r3, [pc, #448]	; (80005d0 <GPIO_Init+0x2c4>)
 800040e:	68db      	ldr	r3, [r3, #12]
 8000410:	7dfa      	ldrb	r2, [r7, #23]
 8000412:	2101      	movs	r1, #1
 8000414:	fa01 f202 	lsl.w	r2, r1, r2
 8000418:	4611      	mov	r1, r2
 800041a:	4a6d      	ldr	r2, [pc, #436]	; (80005d0 <GPIO_Init+0x2c4>)
 800041c:	430b      	orrs	r3, r1
 800041e:	60d3      	str	r3, [r2, #12]
		}

		// 2. Configure gpio port selection in SYSCFG_EXTICR
		uint8_t temp1 = pin_number/4;
 8000420:	7dfb      	ldrb	r3, [r7, #23]
 8000422:	089b      	lsrs	r3, r3, #2
 8000424:	73fb      	strb	r3, [r7, #15]
		uint8_t temp2 = pin_number%4;
 8000426:	7dfb      	ldrb	r3, [r7, #23]
 8000428:	f003 0303 	and.w	r3, r3, #3
 800042c:	73bb      	strb	r3, [r7, #14]

		uint16_t port_code = GPIO_ADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	4a68      	ldr	r2, [pc, #416]	; (80005d4 <GPIO_Init+0x2c8>)
 8000434:	4293      	cmp	r3, r2
 8000436:	d024      	beq.n	8000482 <GPIO_Init+0x176>
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	4a66      	ldr	r2, [pc, #408]	; (80005d8 <GPIO_Init+0x2cc>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d01d      	beq.n	800047e <GPIO_Init+0x172>
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	4a65      	ldr	r2, [pc, #404]	; (80005dc <GPIO_Init+0x2d0>)
 8000448:	4293      	cmp	r3, r2
 800044a:	d016      	beq.n	800047a <GPIO_Init+0x16e>
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	4a63      	ldr	r2, [pc, #396]	; (80005e0 <GPIO_Init+0x2d4>)
 8000452:	4293      	cmp	r3, r2
 8000454:	d00f      	beq.n	8000476 <GPIO_Init+0x16a>
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	4a62      	ldr	r2, [pc, #392]	; (80005e4 <GPIO_Init+0x2d8>)
 800045c:	4293      	cmp	r3, r2
 800045e:	d008      	beq.n	8000472 <GPIO_Init+0x166>
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	4a60      	ldr	r2, [pc, #384]	; (80005e8 <GPIO_Init+0x2dc>)
 8000466:	4293      	cmp	r3, r2
 8000468:	d101      	bne.n	800046e <GPIO_Init+0x162>
 800046a:	2307      	movs	r3, #7
 800046c:	e00a      	b.n	8000484 <GPIO_Init+0x178>
 800046e:	2300      	movs	r3, #0
 8000470:	e008      	b.n	8000484 <GPIO_Init+0x178>
 8000472:	2304      	movs	r3, #4
 8000474:	e006      	b.n	8000484 <GPIO_Init+0x178>
 8000476:	2303      	movs	r3, #3
 8000478:	e004      	b.n	8000484 <GPIO_Init+0x178>
 800047a:	2302      	movs	r3, #2
 800047c:	e002      	b.n	8000484 <GPIO_Init+0x178>
 800047e:	2301      	movs	r3, #1
 8000480:	e000      	b.n	8000484 <GPIO_Init+0x178>
 8000482:	2300      	movs	r3, #0
 8000484:	81bb      	strh	r3, [r7, #12]
		SYSCFG_PCLK_EN();
 8000486:	4b59      	ldr	r3, [pc, #356]	; (80005ec <GPIO_Init+0x2e0>)
 8000488:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800048a:	4a58      	ldr	r2, [pc, #352]	; (80005ec <GPIO_Init+0x2e0>)
 800048c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000490:	6453      	str	r3, [r2, #68]	; 0x44

		//SYSCFG->EXTICR[temp1] &= ~(0xF << 4*temp2);
		SYSCFG->EXTICR[temp1] |= (port_code << 4*temp2);
 8000492:	4a57      	ldr	r2, [pc, #348]	; (80005f0 <GPIO_Init+0x2e4>)
 8000494:	7bfb      	ldrb	r3, [r7, #15]
 8000496:	3302      	adds	r3, #2
 8000498:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800049c:	89b9      	ldrh	r1, [r7, #12]
 800049e:	7bbb      	ldrb	r3, [r7, #14]
 80004a0:	009b      	lsls	r3, r3, #2
 80004a2:	fa01 f303 	lsl.w	r3, r1, r3
 80004a6:	4618      	mov	r0, r3
 80004a8:	4951      	ldr	r1, [pc, #324]	; (80005f0 <GPIO_Init+0x2e4>)
 80004aa:	7bfb      	ldrb	r3, [r7, #15]
 80004ac:	4302      	orrs	r2, r0
 80004ae:	3302      	adds	r3, #2
 80004b0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//3. Enable the exti innterupt delivery using IMR
		EXTI->IMR |= (1<<pin_number);
 80004b4:	4b46      	ldr	r3, [pc, #280]	; (80005d0 <GPIO_Init+0x2c4>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	7dfa      	ldrb	r2, [r7, #23]
 80004ba:	2101      	movs	r1, #1
 80004bc:	fa01 f202 	lsl.w	r2, r1, r2
 80004c0:	4611      	mov	r1, r2
 80004c2:	4a43      	ldr	r2, [pc, #268]	; (80005d0 <GPIO_Init+0x2c4>)
 80004c4:	430b      	orrs	r3, r1
 80004c6:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 80004c8:	2300      	movs	r3, #0
 80004ca:	613b      	str	r3, [r7, #16]
	//2. configure speed
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pin_number);
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	799b      	ldrb	r3, [r3, #6]
 80004d0:	461a      	mov	r2, r3
 80004d2:	7dfb      	ldrb	r3, [r7, #23]
 80004d4:	005b      	lsls	r3, r3, #1
 80004d6:	fa02 f303 	lsl.w	r3, r2, r3
 80004da:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<pin_number);
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	689a      	ldr	r2, [r3, #8]
 80004e2:	7dfb      	ldrb	r3, [r7, #23]
 80004e4:	2103      	movs	r1, #3
 80004e6:	fa01 f303 	lsl.w	r3, r1, r3
 80004ea:	43db      	mvns	r3, r3
 80004ec:	4619      	mov	r1, r3
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	400a      	ands	r2, r1
 80004f4:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	6899      	ldr	r1, [r3, #8]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	693a      	ldr	r2, [r7, #16]
 8000502:	430a      	orrs	r2, r1
 8000504:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000506:	2300      	movs	r3, #0
 8000508:	613b      	str	r3, [r7, #16]
	//3. configure pupd settings
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PUPDControl << (2 * pin_number);
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	79db      	ldrb	r3, [r3, #7]
 800050e:	461a      	mov	r2, r3
 8000510:	7dfb      	ldrb	r3, [r7, #23]
 8000512:	005b      	lsls	r3, r3, #1
 8000514:	fa02 f303 	lsl.w	r3, r2, r3
 8000518:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3<<pin_number);
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	68da      	ldr	r2, [r3, #12]
 8000520:	7dfb      	ldrb	r3, [r7, #23]
 8000522:	2103      	movs	r1, #3
 8000524:	fa01 f303 	lsl.w	r3, r1, r3
 8000528:	43db      	mvns	r3, r3
 800052a:	4619      	mov	r1, r3
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	400a      	ands	r2, r1
 8000532:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	68d9      	ldr	r1, [r3, #12]
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	693a      	ldr	r2, [r7, #16]
 8000540:	430a      	orrs	r2, r1
 8000542:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000544:	2300      	movs	r3, #0
 8000546:	613b      	str	r3, [r7, #16]
	//4. configure output type
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pin_number);
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	7a1b      	ldrb	r3, [r3, #8]
 800054c:	461a      	mov	r2, r3
 800054e:	7dfb      	ldrb	r3, [r7, #23]
 8000550:	fa02 f303 	lsl.w	r3, r2, r3
 8000554:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OTYPER &= ~(1<<pin_number);
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	685a      	ldr	r2, [r3, #4]
 800055c:	7dfb      	ldrb	r3, [r7, #23]
 800055e:	2101      	movs	r1, #1
 8000560:	fa01 f303 	lsl.w	r3, r1, r3
 8000564:	43db      	mvns	r3, r3
 8000566:	4619      	mov	r1, r3
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	400a      	ands	r2, r1
 800056e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	6859      	ldr	r1, [r3, #4]
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	693a      	ldr	r2, [r7, #16]
 800057c:	430a      	orrs	r2, r1
 800057e:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000580:	2300      	movs	r3, #0
 8000582:	613b      	str	r3, [r7, #16]

	//5. configure alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALT){
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	795b      	ldrb	r3, [r3, #5]
 8000588:	2b02      	cmp	r3, #2
 800058a:	d154      	bne.n	8000636 <GPIO_Init+0x32a>

		if(pin_number < GPIO_PIN_8){
 800058c:	7dfb      	ldrb	r3, [r7, #23]
 800058e:	2b07      	cmp	r3, #7
 8000590:	d830      	bhi.n	80005f4 <GPIO_Init+0x2e8>
			temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*pin_number);
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	7a5b      	ldrb	r3, [r3, #9]
 8000596:	461a      	mov	r2, r3
 8000598:	7dfb      	ldrb	r3, [r7, #23]
 800059a:	009b      	lsls	r3, r3, #2
 800059c:	fa02 f303 	lsl.w	r3, r2, r3
 80005a0:	613b      	str	r3, [r7, #16]
			pGPIOHandle->pGPIOx->AFRL &= ~(0xF<<pin_number);
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	6a1a      	ldr	r2, [r3, #32]
 80005a8:	7dfb      	ldrb	r3, [r7, #23]
 80005aa:	210f      	movs	r1, #15
 80005ac:	fa01 f303 	lsl.w	r3, r1, r3
 80005b0:	43db      	mvns	r3, r3
 80005b2:	4619      	mov	r1, r3
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	400a      	ands	r2, r1
 80005ba:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFRL |= temp;
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	6a19      	ldr	r1, [r3, #32]
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	693a      	ldr	r2, [r7, #16]
 80005c8:	430a      	orrs	r2, r1
 80005ca:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFRH |= temp;
		}

	}

}
 80005cc:	e033      	b.n	8000636 <GPIO_Init+0x32a>
 80005ce:	bf00      	nop
 80005d0:	40013c00 	.word	0x40013c00
 80005d4:	40020000 	.word	0x40020000
 80005d8:	40020400 	.word	0x40020400
 80005dc:	40020800 	.word	0x40020800
 80005e0:	40020c00 	.word	0x40020c00
 80005e4:	40021000 	.word	0x40021000
 80005e8:	40021c00 	.word	0x40021c00
 80005ec:	40023800 	.word	0x40023800
 80005f0:	40013800 	.word	0x40013800
			temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*(pin_number%8));
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	7a5b      	ldrb	r3, [r3, #9]
 80005f8:	461a      	mov	r2, r3
 80005fa:	7dfb      	ldrb	r3, [r7, #23]
 80005fc:	f003 0307 	and.w	r3, r3, #7
 8000600:	009b      	lsls	r3, r3, #2
 8000602:	fa02 f303 	lsl.w	r3, r2, r3
 8000606:	613b      	str	r3, [r7, #16]
			pGPIOHandle->pGPIOx->AFRH &= ~(0xF<<pin_number%8);
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800060e:	7dfb      	ldrb	r3, [r7, #23]
 8000610:	f003 0307 	and.w	r3, r3, #7
 8000614:	210f      	movs	r1, #15
 8000616:	fa01 f303 	lsl.w	r3, r1, r3
 800061a:	43db      	mvns	r3, r3
 800061c:	4619      	mov	r1, r3
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	400a      	ands	r2, r1
 8000624:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOx->AFRH |= temp;
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	693a      	ldr	r2, [r7, #16]
 8000632:	430a      	orrs	r2, r1
 8000634:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000636:	bf00      	nop
 8000638:	3718      	adds	r7, #24
 800063a:	46bd      	mov	sp, r7
 800063c:	bd80      	pop	{r7, pc}
 800063e:	bf00      	nop

08000640 <GPIO_PClkControl>:
 * @brief Enable/Disable peripheral clock
 *
 * @param pGPIOx    base address of gpio peripheral
 * @param enable    ENABLE/DISABLE macros
 */
void GPIO_PClkControl(GPIO_RegDef_t *pGPIOx, uint8_t enable) {
 8000640:	b480      	push	{r7}
 8000642:	b083      	sub	sp, #12
 8000644:	af00      	add	r7, sp, #0
 8000646:	6078      	str	r0, [r7, #4]
 8000648:	460b      	mov	r3, r1
 800064a:	70fb      	strb	r3, [r7, #3]

  if (enable == ENABLE) {
 800064c:	78fb      	ldrb	r3, [r7, #3]
 800064e:	2b01      	cmp	r3, #1
 8000650:	d141      	bne.n	80006d6 <GPIO_PClkControl+0x96>

    if (pGPIOx == GPIOA) {
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	4a43      	ldr	r2, [pc, #268]	; (8000764 <GPIO_PClkControl+0x124>)
 8000656:	4293      	cmp	r3, r2
 8000658:	d106      	bne.n	8000668 <GPIO_PClkControl+0x28>
      GPIOA_PCLK_EN();
 800065a:	4b43      	ldr	r3, [pc, #268]	; (8000768 <GPIO_PClkControl+0x128>)
 800065c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800065e:	4a42      	ldr	r2, [pc, #264]	; (8000768 <GPIO_PClkControl+0x128>)
 8000660:	f043 0301 	orr.w	r3, r3, #1
 8000664:	6313      	str	r3, [r2, #48]	; 0x30
      GPIOE_PCLK_DIS();
    } else if (pGPIOx == GPIOH) {
      GPIOH_PCLK_DIS();
    }
  }
}
 8000666:	e077      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOB) {
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	4a40      	ldr	r2, [pc, #256]	; (800076c <GPIO_PClkControl+0x12c>)
 800066c:	4293      	cmp	r3, r2
 800066e:	d106      	bne.n	800067e <GPIO_PClkControl+0x3e>
      GPIOB_PCLK_EN();
 8000670:	4b3d      	ldr	r3, [pc, #244]	; (8000768 <GPIO_PClkControl+0x128>)
 8000672:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000674:	4a3c      	ldr	r2, [pc, #240]	; (8000768 <GPIO_PClkControl+0x128>)
 8000676:	f043 0302 	orr.w	r3, r3, #2
 800067a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800067c:	e06c      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOC) {
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	4a3b      	ldr	r2, [pc, #236]	; (8000770 <GPIO_PClkControl+0x130>)
 8000682:	4293      	cmp	r3, r2
 8000684:	d106      	bne.n	8000694 <GPIO_PClkControl+0x54>
      GPIOC_PCLK_EN();
 8000686:	4b38      	ldr	r3, [pc, #224]	; (8000768 <GPIO_PClkControl+0x128>)
 8000688:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800068a:	4a37      	ldr	r2, [pc, #220]	; (8000768 <GPIO_PClkControl+0x128>)
 800068c:	f043 0304 	orr.w	r3, r3, #4
 8000690:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000692:	e061      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOD) {
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	4a37      	ldr	r2, [pc, #220]	; (8000774 <GPIO_PClkControl+0x134>)
 8000698:	4293      	cmp	r3, r2
 800069a:	d106      	bne.n	80006aa <GPIO_PClkControl+0x6a>
      GPIOD_PCLK_EN();
 800069c:	4b32      	ldr	r3, [pc, #200]	; (8000768 <GPIO_PClkControl+0x128>)
 800069e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006a0:	4a31      	ldr	r2, [pc, #196]	; (8000768 <GPIO_PClkControl+0x128>)
 80006a2:	f043 0308 	orr.w	r3, r3, #8
 80006a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006a8:	e056      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOE) {
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	4a32      	ldr	r2, [pc, #200]	; (8000778 <GPIO_PClkControl+0x138>)
 80006ae:	4293      	cmp	r3, r2
 80006b0:	d106      	bne.n	80006c0 <GPIO_PClkControl+0x80>
      GPIOE_PCLK_EN();
 80006b2:	4b2d      	ldr	r3, [pc, #180]	; (8000768 <GPIO_PClkControl+0x128>)
 80006b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006b6:	4a2c      	ldr	r2, [pc, #176]	; (8000768 <GPIO_PClkControl+0x128>)
 80006b8:	f043 0310 	orr.w	r3, r3, #16
 80006bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006be:	e04b      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOH) {
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	4a2e      	ldr	r2, [pc, #184]	; (800077c <GPIO_PClkControl+0x13c>)
 80006c4:	4293      	cmp	r3, r2
 80006c6:	d147      	bne.n	8000758 <GPIO_PClkControl+0x118>
      GPIOH_PCLK_EN();
 80006c8:	4b27      	ldr	r3, [pc, #156]	; (8000768 <GPIO_PClkControl+0x128>)
 80006ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006cc:	4a26      	ldr	r2, [pc, #152]	; (8000768 <GPIO_PClkControl+0x128>)
 80006ce:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006d4:	e040      	b.n	8000758 <GPIO_PClkControl+0x118>
    if (pGPIOx == GPIOA) {
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	4a22      	ldr	r2, [pc, #136]	; (8000764 <GPIO_PClkControl+0x124>)
 80006da:	4293      	cmp	r3, r2
 80006dc:	d106      	bne.n	80006ec <GPIO_PClkControl+0xac>
      GPIOA_PCLK_DIS();
 80006de:	4b22      	ldr	r3, [pc, #136]	; (8000768 <GPIO_PClkControl+0x128>)
 80006e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006e2:	4a21      	ldr	r2, [pc, #132]	; (8000768 <GPIO_PClkControl+0x128>)
 80006e4:	f023 0301 	bic.w	r3, r3, #1
 80006e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006ea:	e035      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOB) {
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	4a1f      	ldr	r2, [pc, #124]	; (800076c <GPIO_PClkControl+0x12c>)
 80006f0:	4293      	cmp	r3, r2
 80006f2:	d106      	bne.n	8000702 <GPIO_PClkControl+0xc2>
      GPIOB_PCLK_DIS();
 80006f4:	4b1c      	ldr	r3, [pc, #112]	; (8000768 <GPIO_PClkControl+0x128>)
 80006f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006f8:	4a1b      	ldr	r2, [pc, #108]	; (8000768 <GPIO_PClkControl+0x128>)
 80006fa:	f023 0302 	bic.w	r3, r3, #2
 80006fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000700:	e02a      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOC) {
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	4a1a      	ldr	r2, [pc, #104]	; (8000770 <GPIO_PClkControl+0x130>)
 8000706:	4293      	cmp	r3, r2
 8000708:	d106      	bne.n	8000718 <GPIO_PClkControl+0xd8>
      GPIOC_PCLK_DIS();
 800070a:	4b17      	ldr	r3, [pc, #92]	; (8000768 <GPIO_PClkControl+0x128>)
 800070c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800070e:	4a16      	ldr	r2, [pc, #88]	; (8000768 <GPIO_PClkControl+0x128>)
 8000710:	f023 0304 	bic.w	r3, r3, #4
 8000714:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000716:	e01f      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOD) {
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	4a16      	ldr	r2, [pc, #88]	; (8000774 <GPIO_PClkControl+0x134>)
 800071c:	4293      	cmp	r3, r2
 800071e:	d106      	bne.n	800072e <GPIO_PClkControl+0xee>
      GPIOD_PCLK_DIS();
 8000720:	4b11      	ldr	r3, [pc, #68]	; (8000768 <GPIO_PClkControl+0x128>)
 8000722:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000724:	4a10      	ldr	r2, [pc, #64]	; (8000768 <GPIO_PClkControl+0x128>)
 8000726:	f023 0308 	bic.w	r3, r3, #8
 800072a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800072c:	e014      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOE) {
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	4a11      	ldr	r2, [pc, #68]	; (8000778 <GPIO_PClkControl+0x138>)
 8000732:	4293      	cmp	r3, r2
 8000734:	d106      	bne.n	8000744 <GPIO_PClkControl+0x104>
      GPIOE_PCLK_DIS();
 8000736:	4b0c      	ldr	r3, [pc, #48]	; (8000768 <GPIO_PClkControl+0x128>)
 8000738:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800073a:	4a0b      	ldr	r2, [pc, #44]	; (8000768 <GPIO_PClkControl+0x128>)
 800073c:	f023 0310 	bic.w	r3, r3, #16
 8000740:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000742:	e009      	b.n	8000758 <GPIO_PClkControl+0x118>
    } else if (pGPIOx == GPIOH) {
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	4a0d      	ldr	r2, [pc, #52]	; (800077c <GPIO_PClkControl+0x13c>)
 8000748:	4293      	cmp	r3, r2
 800074a:	d105      	bne.n	8000758 <GPIO_PClkControl+0x118>
      GPIOH_PCLK_DIS();
 800074c:	4b06      	ldr	r3, [pc, #24]	; (8000768 <GPIO_PClkControl+0x128>)
 800074e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000750:	4a05      	ldr	r2, [pc, #20]	; (8000768 <GPIO_PClkControl+0x128>)
 8000752:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000756:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000758:	bf00      	nop
 800075a:	370c      	adds	r7, #12
 800075c:	46bd      	mov	sp, r7
 800075e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000762:	4770      	bx	lr
 8000764:	40020000 	.word	0x40020000
 8000768:	40023800 	.word	0x40023800
 800076c:	40020400 	.word	0x40020400
 8000770:	40020800 	.word	0x40020800
 8000774:	40020c00 	.word	0x40020c00
 8000778:	40021000 	.word	0x40021000
 800077c:	40021c00 	.word	0x40021c00

08000780 <GPIO_ReadFromInpPin>:
 *
 * @param pGPIOx base address of gpio peripheral
 * @param Pin    pin number
 * @return uint8_t input pin value
 */
uint8_t GPIO_ReadFromInpPin(GPIO_RegDef_t *pGPIOx, uint8_t Pin){
 8000780:	b480      	push	{r7}
 8000782:	b085      	sub	sp, #20
 8000784:	af00      	add	r7, sp, #0
 8000786:	6078      	str	r0, [r7, #4]
 8000788:	460b      	mov	r3, r1
 800078a:	70fb      	strb	r3, [r7, #3]

	uint8_t out = (uint8_t)(pGPIOx->IDR >> Pin) & (0x00000001);
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	691a      	ldr	r2, [r3, #16]
 8000790:	78fb      	ldrb	r3, [r7, #3]
 8000792:	fa22 f303 	lsr.w	r3, r2, r3
 8000796:	b2db      	uxtb	r3, r3
 8000798:	f003 0301 	and.w	r3, r3, #1
 800079c:	73fb      	strb	r3, [r7, #15]
	return out;
 800079e:	7bfb      	ldrb	r3, [r7, #15]

}
 80007a0:	4618      	mov	r0, r3
 80007a2:	3714      	adds	r7, #20
 80007a4:	46bd      	mov	sp, r7
 80007a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007aa:	4770      	bx	lr

080007ac <GPIO_TogglePin>:
 * @brief Toggle 'Pin' of port GPIOx
 *
 * @param pGPIOx base address of gpio peripheral
 * @param Pin    pin number
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t Pin){
 80007ac:	b480      	push	{r7}
 80007ae:	b083      	sub	sp, #12
 80007b0:	af00      	add	r7, sp, #0
 80007b2:	6078      	str	r0, [r7, #4]
 80007b4:	460b      	mov	r3, r1
 80007b6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << Pin);
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	695b      	ldr	r3, [r3, #20]
 80007bc:	78fa      	ldrb	r2, [r7, #3]
 80007be:	2101      	movs	r1, #1
 80007c0:	fa01 f202 	lsl.w	r2, r1, r2
 80007c4:	405a      	eors	r2, r3
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	615a      	str	r2, [r3, #20]
}
 80007ca:	bf00      	nop
 80007cc:	370c      	adds	r7, #12
 80007ce:	46bd      	mov	sp, r7
 80007d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007d4:	4770      	bx	lr
	...

080007d8 <GPIO_IRQHandling>:

	*NVIC_IPRx(IRQNumber) |= ((IRQPriority << 8*(IRQNumber%4)) << (8-NO_PR_BITS_IMPLEMENTED));

}

void GPIO_IRQHandling(uint8_t Pin){
 80007d8:	b480      	push	{r7}
 80007da:	b083      	sub	sp, #12
 80007dc:	af00      	add	r7, sp, #0
 80007de:	4603      	mov	r3, r0
 80007e0:	71fb      	strb	r3, [r7, #7]
	// clear bit in EXTI pending register by writing 1
	if(EXTI->PR & (1 << Pin)){
 80007e2:	4b0c      	ldr	r3, [pc, #48]	; (8000814 <GPIO_IRQHandling+0x3c>)
 80007e4:	695b      	ldr	r3, [r3, #20]
 80007e6:	79fa      	ldrb	r2, [r7, #7]
 80007e8:	2101      	movs	r1, #1
 80007ea:	fa01 f202 	lsl.w	r2, r1, r2
 80007ee:	4013      	ands	r3, r2
 80007f0:	2b00      	cmp	r3, #0
 80007f2:	d009      	beq.n	8000808 <GPIO_IRQHandling+0x30>
		EXTI->PR |= (1 << Pin);
 80007f4:	4b07      	ldr	r3, [pc, #28]	; (8000814 <GPIO_IRQHandling+0x3c>)
 80007f6:	695b      	ldr	r3, [r3, #20]
 80007f8:	79fa      	ldrb	r2, [r7, #7]
 80007fa:	2101      	movs	r1, #1
 80007fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000800:	4611      	mov	r1, r2
 8000802:	4a04      	ldr	r2, [pc, #16]	; (8000814 <GPIO_IRQHandling+0x3c>)
 8000804:	430b      	orrs	r3, r1
 8000806:	6153      	str	r3, [r2, #20]
	}
}
 8000808:	bf00      	nop
 800080a:	370c      	adds	r7, #12
 800080c:	46bd      	mov	sp, r7
 800080e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000812:	4770      	bx	lr
 8000814:	40013c00 	.word	0x40013c00

08000818 <__libc_init_array>:
 8000818:	b570      	push	{r4, r5, r6, lr}
 800081a:	4d0d      	ldr	r5, [pc, #52]	; (8000850 <__libc_init_array+0x38>)
 800081c:	4c0d      	ldr	r4, [pc, #52]	; (8000854 <__libc_init_array+0x3c>)
 800081e:	1b64      	subs	r4, r4, r5
 8000820:	10a4      	asrs	r4, r4, #2
 8000822:	2600      	movs	r6, #0
 8000824:	42a6      	cmp	r6, r4
 8000826:	d109      	bne.n	800083c <__libc_init_array+0x24>
 8000828:	4d0b      	ldr	r5, [pc, #44]	; (8000858 <__libc_init_array+0x40>)
 800082a:	4c0c      	ldr	r4, [pc, #48]	; (800085c <__libc_init_array+0x44>)
 800082c:	f000 f818 	bl	8000860 <_init>
 8000830:	1b64      	subs	r4, r4, r5
 8000832:	10a4      	asrs	r4, r4, #2
 8000834:	2600      	movs	r6, #0
 8000836:	42a6      	cmp	r6, r4
 8000838:	d105      	bne.n	8000846 <__libc_init_array+0x2e>
 800083a:	bd70      	pop	{r4, r5, r6, pc}
 800083c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000840:	4798      	blx	r3
 8000842:	3601      	adds	r6, #1
 8000844:	e7ee      	b.n	8000824 <__libc_init_array+0xc>
 8000846:	f855 3b04 	ldr.w	r3, [r5], #4
 800084a:	4798      	blx	r3
 800084c:	3601      	adds	r6, #1
 800084e:	e7f2      	b.n	8000836 <__libc_init_array+0x1e>
 8000850:	08000878 	.word	0x08000878
 8000854:	08000878 	.word	0x08000878
 8000858:	08000878 	.word	0x08000878
 800085c:	0800087c 	.word	0x0800087c

08000860 <_init>:
 8000860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000862:	bf00      	nop
 8000864:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000866:	bc08      	pop	{r3}
 8000868:	469e      	mov	lr, r3
 800086a:	4770      	bx	lr

0800086c <_fini>:
 800086c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800086e:	bf00      	nop
 8000870:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000872:	bc08      	pop	{r3}
 8000874:	469e      	mov	lr, r3
 8000876:	4770      	bx	lr
